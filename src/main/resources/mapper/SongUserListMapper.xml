<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.webMusic.common.dao.SongUserListMapper" >
  <resultMap id="BaseResultMap" type="com.webMusic.common.model.SongUserList" >
    <id column="song_list_id" property="songListId" jdbcType="VARCHAR" />
    <result column="song_url" property="songUrl" jdbcType="VARCHAR" />
    <result column="song_name" property="songName" jdbcType="VARCHAR" />
    <result column="song_classify_id" property="songClassifyId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="open" property="open" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    song_list_id, song_url, song_name, song_classify_id, user_id, open
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.webMusic.common.model.SongUserListExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from song_user_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from song_user_list
    where song_list_id = #{songListId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from song_user_list
    where song_list_id = #{songListId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.webMusic.common.model.SongUserListExample" >
    delete from song_user_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.webMusic.common.model.SongUserList" >
    insert into song_user_list (song_list_id, song_url, song_name, 
      song_classify_id, user_id, open
      )
    values (#{songListId,jdbcType=VARCHAR}, #{songUrl,jdbcType=VARCHAR}, #{songName,jdbcType=VARCHAR}, 
      #{songClassifyId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{open,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.webMusic.common.model.SongUserList" >
    insert into song_user_list
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="songListId != null" >
        song_list_id,
      </if>
      <if test="songUrl != null" >
        song_url,
      </if>
      <if test="songName != null" >
        song_name,
      </if>
      <if test="songClassifyId != null" >
        song_classify_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="open != null" >
        open,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="songListId != null" >
        #{songListId,jdbcType=VARCHAR},
      </if>
      <if test="songUrl != null" >
        #{songUrl,jdbcType=VARCHAR},
      </if>
      <if test="songName != null" >
        #{songName,jdbcType=VARCHAR},
      </if>
      <if test="songClassifyId != null" >
        #{songClassifyId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="open != null" >
        #{open,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.webMusic.common.model.SongUserListExample" resultType="java.lang.Integer" >
    select count(*) from song_user_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update song_user_list
    <set >
      <if test="record.songListId != null" >
        song_list_id = #{record.songListId,jdbcType=VARCHAR},
      </if>
      <if test="record.songUrl != null" >
        song_url = #{record.songUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.songName != null" >
        song_name = #{record.songName,jdbcType=VARCHAR},
      </if>
      <if test="record.songClassifyId != null" >
        song_classify_id = #{record.songClassifyId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.open != null" >
        open = #{record.open,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update song_user_list
    set song_list_id = #{record.songListId,jdbcType=VARCHAR},
      song_url = #{record.songUrl,jdbcType=VARCHAR},
      song_name = #{record.songName,jdbcType=VARCHAR},
      song_classify_id = #{record.songClassifyId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      open = #{record.open,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.webMusic.common.model.SongUserList" >
    update song_user_list
    <set >
      <if test="songUrl != null" >
        song_url = #{songUrl,jdbcType=VARCHAR},
      </if>
      <if test="songName != null" >
        song_name = #{songName,jdbcType=VARCHAR},
      </if>
      <if test="songClassifyId != null" >
        song_classify_id = #{songClassifyId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="open != null" >
        open = #{open,jdbcType=VARCHAR},
      </if>
    </set>
    where song_list_id = #{songListId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.webMusic.common.model.SongUserList" >
    update song_user_list
    set song_url = #{songUrl,jdbcType=VARCHAR},
      song_name = #{songName,jdbcType=VARCHAR},
      song_classify_id = #{songClassifyId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      open = #{open,jdbcType=VARCHAR}
    where song_list_id = #{songListId,jdbcType=VARCHAR}
  </update>
</mapper>